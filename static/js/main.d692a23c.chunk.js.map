{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","props","username","tag","location","avatar","stats","className","s","profile","description","src","alt","statsitem","label","followers","views","likes","Statistics","title","randomColor","Math","floor","random","statistics","statlist","map","id","percentage","item","style","backgroundColor","FriendList","friends","isOnline","name","width","App","user","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,MAAQ,uBAAuB,UAAY,6B,gBCA5KD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,4B,0rCCErH,SAASC,EAAQC,GAC9B,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MACzC,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKN,EAAQO,IAAI,cAAcL,UAAWC,IAAEH,SACjD,4BAAIH,IACJ,4BAAIC,IACJ,4BAAIC,OAGN,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,qBAAIC,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,uBACA,+BAAOR,EAAMS,eAEf,qBAAIR,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,+BAAOR,EAAMU,WAEf,qBAAIT,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,+BAAOR,EAAMW,iB,2BCtBR,SAASC,EAAWjB,GACjC,IAAQkB,EAAiBlB,EAAjBkB,MAAOb,EAAUL,EAAVK,MACTc,EAAc,IAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC1C,OACE,0BAAShB,UAAWC,IAAEgB,WAAtB,UACE,oBAAIjB,UAAWC,IAAEW,MAAjB,SAAyBA,IACzB,oBAAIZ,UAAWC,IAAEiB,SAAjB,SACGnB,EAAMoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,MAAOc,EAAd,EAAcA,WAAd,OACT,qBAAIrB,UAAWC,IAAEqB,KAAeC,MAAO,CAAEC,gBAAiBX,GAA1D,UACE,sBAAMb,UAAWC,IAAEM,MAAnB,SAA2BA,IAC3B,sBAAMP,UAAWC,IAAEoB,WAAnB,SAAgCA,MAFND,W,WCTvB,SAASK,EAAW/B,GACjC,IAAQgC,EAAYhC,EAAZgC,QACR,OACE,oBAAI1B,UAAU,cAAd,SACG0B,EAAQP,KAAI,gBAAGQ,EAAH,EAAGA,SAAUP,EAAb,EAAaA,GAAItB,EAAjB,EAAiBA,OAAQ8B,EAAzB,EAAyBA,KAAzB,OACX,qBAAI5B,UAAU,OAAd,UACE,sBAAMA,UAAU,SAAhB,SAA0B2B,IAC1B,qBAAK3B,UAAU,SAASI,IAAKN,EAAQO,IAAI,cAAcwB,MAAM,OAC7D,mBAAG7B,UAAU,OAAb,SAAqB4B,MAHGR,Q,WCiBnBU,MAhBf,WACE,OACE,gCACE,cAACrC,EAAD,CACEE,SAAUoC,EAAKpC,SACfC,IAAKmC,EAAKnC,IACVC,SAAUkC,EAAKlC,SACfC,OAAQiC,EAAKjC,OACbC,MAAOgC,EAAKhC,QAEd,cAACY,EAAD,CAAYC,MAAM,eAAeb,MAAOiC,IAR1C,IASE,cAACP,EAAD,CAAYC,QAASA,IATvB,QCEWO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d692a23c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2FfNs\",\"description\":\"Profile_description__TY7pI\",\"avatar\":\"Profile_avatar__1ofO7\",\"stats\":\"Profile_stats__GOu3B\",\"statsitem\":\"Profile_statsitem__1-knU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__1ysXR\",\"statlist\":\"Statistics_statlist__342Ma\",\"item\":\"Statistics_item__29L_g\",\"label\":\"Statistics_label__3rjAq\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nexport default function Profile(props) {\n  const { username, tag, location, avatar, stats } = props;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n        <p>{username}</p>\n        <p>{tag}</p>\n        <p>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statsitem}>\n          <span className={s.label}>Followers</span>\n          <span>{stats.followers}</span>\n        </li>\n        <li className={s.statsitem}>\n          <span className={s.label}>Views</span>\n          <span>{stats.views}</span>\n        </li>\n        <li className={s.statsitem}>\n          <span className={s.label}>Likes</span>\n          <span>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  username: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics(props) {\n  const { title, stats } = props;\n  const randomColor = '#' + Math.floor(Math.random() * 256);\n  return (\n    <section className={s.statistics}>\n      <h2 className={s.title}>{title}</h2>\n      <ul className={s.statlist}>\n        {stats.map(({ id, label, percentage }) => (\n          <li className={s.item} key={id} style={{ backgroundColor: randomColor }}>\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\n\nexport default function FriendList(props) {\n  const { friends } = props;\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(({ isOnline, id, avatar, name }) => (\n        <li className=\"item\" key={id}>\n          <span className=\"status\">{isOnline}</span>\n          <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\n          <p className=\"name\">{name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n  friends: PropTypes.array,\n};\n","import Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport data from './components/Statistics/data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nfunction App() {\n  return (\n    <div>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />;{/* <Statistics stats={data} />; */}\n      <FriendList friends={friends} />,\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}