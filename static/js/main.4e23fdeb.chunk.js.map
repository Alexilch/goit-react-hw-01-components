{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/RandomColor.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","props","username","tag","location","avatar","stats","className","s","profile","description","src","alt","statsitem","label","followers","views","likes","getRandomColor","letters","split","color","i","Math","floor","random","Statistics","title","statistics","statlist","map","id","percentage","item","style","backgroundColor","randomColor","FriendListItem","isOnline","name","width","FriendList","friends","friendlist","friend","TransactionHistory","items","transactionHistory","threadtitle","tablebody","type","amount","currency","tablerow","App","user","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,MAAQ,uBAAuB,UAAY,6B,gBCA5KD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,4B,yPCAhLD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,YAAc,wCAAwC,UAAY,sCAAsC,SAAW,uC,iBCAzMD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,QAAU,gCAAgC,KAAO,+B,0RCA3GD,EAAOC,QAAU,CAAC,WAAa,iC,8qFCEhB,SAASC,EAAQC,GAC9B,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MACzC,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKN,EAAQO,IAAI,cAAcL,UAAWC,IAAEH,SACjD,4BAAIH,IACJ,4BAAIC,IACJ,4BAAIC,OAGN,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,qBAAIC,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,uBACA,+BAAOR,EAAMS,eAEf,qBAAIR,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,+BAAOR,EAAMU,WAEf,qBAAIT,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,+BAAOR,EAAMW,iB,2BCzBR,SAASC,IAGpB,IAFA,IAAIC,EAAU,mBAAmBC,MAAM,IACnCC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,GAASF,EAAQI,KAAKC,MAAsB,GAAhBD,KAAKE,WAErC,OAAOJ,ECFI,SAASK,EAAWzB,GACjC,IAAQ0B,EAAiB1B,EAAjB0B,MAAOrB,EAAUL,EAAVK,MAEf,OACE,0BAASC,UAAWC,IAAEoB,WAAtB,UACE,oBAAIrB,UAAWC,IAAEmB,MAAjB,SAAyBA,IACzB,oBAAIpB,UAAWC,IAAEqB,SAAjB,SACGvB,EAAMwB,KAAI,gBAAGC,EAAH,EAAGA,GAAIjB,EAAP,EAAOA,MAAOkB,EAAd,EAAcA,WAAd,OACT,qBAAIzB,UAAWC,IAAEyB,KAAeC,MAAO,CAAEC,gBAAiBC,KAA1D,UACE,sBAAM7B,UAAWC,IAAEM,MAAnB,SAA2BA,IAC3B,sBAAMP,UAAWC,IAAEwB,WAAnB,SAAgCA,MAFND,W,4CCTvB,SAASM,EAAepC,GACnC,IAAQqC,EAA2BrC,EAA3BqC,SAAUjC,EAAiBJ,EAAjBI,OAAQkC,EAAStC,EAATsC,KAC1B,OACM,qBAAIhC,UAAWC,IAAEyB,KAAjB,UACE,sBAAM1B,UAAW+B,EAAW,CAAC9B,IAAC,QAAc,CAACA,IAAC,WAC9C,qBAAKD,UAAU,SAASI,IAAKN,EAAQO,IAAI,cAAc4B,MAAM,OAC7D,mBAAGjC,UAAU,OAAb,SAAqBgC,OCLlB,SAASE,EAAT,GAAgC,IAAXC,EAAU,EAAVA,QAClC,OACE,oBAAInC,UAAWC,IAAEmC,WAAjB,SACGD,EAAQZ,KAAI,SAAAc,GAAM,OACb,cAACP,EAAD,CAEEhC,OAAQuC,EAAOvC,OACfkC,KAAMK,EAAOL,KACbD,SAAUM,EAAON,UAHZM,EAAOb,S,4BCNX,SAASc,EAAT,GAAsC,IAATC,EAAQ,EAARA,MAC1C,OACE,wBAAOvC,UAAWC,IAAEuC,mBAApB,UACF,gCACE,qBAAIxC,UAAWC,IAAEwC,YAAjB,UACE,sCACA,wCACA,+CAGJ,uBAAOzC,UAAWC,IAAEyC,UAApB,SACKH,EAAMhB,KAAI,gBAAEoB,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAAUrB,EAA1B,EAA0BA,GAA1B,OACT,qBAAIxB,UAAWC,IAAE6C,SAAjB,UACI,6BAAKH,IACL,6BAAKC,IACL,6BAAKC,MAHsBrB,W,YCaxBuB,MAjBf,WACE,OACE,gCACE,cAACtD,EAAD,CACEE,SAAUqD,EAAKrD,SACfC,IAAKoD,EAAKpD,IACVC,SAAUmD,EAAKnD,SACfC,OAAQkD,EAAKlD,OACbC,MAAOiD,EAAKjD,QAEd,cAACoB,EAAD,CAAYC,MAAM,eAAerB,MAAOkD,IAR1C,IASE,cAACf,EAAD,CAAYC,QAASA,IATvB,IAUE,cAACG,EAAD,CAAoBC,MAAOW,IAV7B,QCDWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e23fdeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2FfNs\",\"description\":\"Profile_description__TY7pI\",\"avatar\":\"Profile_avatar__1ofO7\",\"stats\":\"Profile_stats__GOu3B\",\"statsitem\":\"Profile_statsitem__1-knU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2wov4\",\"title\":\"Statistics_title__1ysXR\",\"statlist\":\"Statistics_statlist__342Ma\",\"item\":\"Statistics_item__29L_g\",\"label\":\"Statistics_label__3rjAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3GnRM\",\"threadtitle\":\"TransactionHistory_threadtitle__yMdAy\",\"tablebody\":\"TransactionHistory_tablebody__2AT_C\",\"tablerow\":\"TransactionHistory_tablerow__34kFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"online\":\"FriendListItem_online__zkcs7\",\"offline\":\"FriendListItem_offline__2wjaB\",\"item\":\"FriendListItem_item__3R-KV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendlist\":\"FriendList_friendlist__3xs0F\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nexport default function Profile(props) {\n  const { username, tag, location, avatar, stats } = props;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n        <p>{username}</p>\n        <p>{tag}</p>\n        <p>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statsitem}>\n          <span className={s.label}>Followers</span>\n          <span>{stats.followers}</span>\n        </li>\n        <li className={s.statsitem}>\n          <span className={s.label}>Views</span>\n          <span>{stats.views}</span>\n        </li>\n        <li className={s.statsitem}>\n          <span className={s.label}>Likes</span>\n          <span>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  username: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n","export default function getRandomColor() {\r\n    let letters = '0123456789ABCDEF'.split('');\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++ ) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport randomColor from './RandomColor'\n\nexport default function Statistics(props) {\n  const { title, stats } = props;\n  // const randomColor = '#' + Math.floor(Math.random() * 256);\n  return (\n    <section className={s.statistics}>\n      <h2 className={s.title}>{title}</h2>\n      <ul className={s.statlist}>\n        {stats.map(({ id, label, percentage }) => (\n          <li className={s.item} key={id} style={{ backgroundColor: randomColor() }}>\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array,\n};\n","import PropTypes from 'prop-types'\r\nimport s from './FriendListItem.module.css'\r\n\r\nexport default function FriendListItem(props) {\r\n    const { isOnline, avatar, name } = props;\r\n    return (\r\n          <li className={s.item}>\r\n            <span className={isOnline ? [s['online']] : [s['offline']]}></span>\r\n            <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n            <p className=\"name\">{name}</p>\r\n          </li>\r\n        )\r\n  }\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n  };","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css'\nimport FriendListItem from '../FriendListItem/FriendListItem'\n\nexport default function FriendList({friends}) {\n  return (\n    <ul className={s.friendlist}>\n      {friends.map(friend => (\n            <FriendListItem\n              key={friend.id}\n              avatar={friend.avatar}\n              name={friend.name}\n              isOnline={friend.isOnline}\n            />\n          ))}\n    </ul>\n  )\n}\n\nFriendList.propTypes = {\nfriend:PropTypes.arrayOf(PropTypes.object,),\n}","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css'\r\n\r\nexport default function TransactionHistory({items}) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n  <thead>\r\n    <tr className={s.threadtitle}>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody className={s.tablebody}>\r\n      {items.map(({type, amount, currency, id}) => (\r\n        <tr className={s.tablerow}key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n  </tbody>\r\n</table>\r\n  )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n}","import Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport data from './components/Statistics/data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json'\nfunction App() {\n  return (\n    <div>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />;{/* <Statistics stats={data} />; */}\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}